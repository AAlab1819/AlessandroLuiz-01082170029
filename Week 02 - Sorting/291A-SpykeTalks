#include <bits/stdc++.h>

using namespace std;

void shellSort(int arr[], int n)
{
    // Start with a big gap, then reduce the gap
    for (int gap = n/2; gap > 0; gap /= 2)
    {
        // Do a gapped insertion sort for this gap size.
        // The first gap elements a[0..gap-1] are already in gapped order
        // keep adding one more element until the entire array is
        // gap sorted
        for (int i = gap; i < n; i += 1)
        {
            // add a[i] to the elements that have been gap sorted
            // save a[i] in temp and make a hole at position i
            int temp = arr[i];

            // shift earlier gap-sorted elements up until the correct
            // location for a[i] is found
            int j;
            for (j = i; j >= gap && arr[j - gap] > temp; j -= gap)
                arr[j] = arr[j - gap];

            //  put temp (the original a[i]) in its correct location
            arr[j] = temp;
        }
    }
}


int main()
{
    int secretaries, counter=0;
    cin>>secretaries;
    int id[secretaries];

    for(int i=0;i<secretaries;i++)
    {
        cin>>id[i];
    }
    shellSort(id, secretaries);
    for (int i = 0; i<secretaries;i++)
    {
        if(id[i]!= 0 && id[i] == id[i+1])
        {
            counter++;
            if ( id[i] != 0&& id[i] == id[i+2])
            {
                counter = -1;
                break;
            }
        }
    }
    cout<<counter<<endl;

    return 0;
}
